1. 特征工程
  特征工程（feature engineering）在数据挖掘应用中直接影响模型最终的性能；在很多计算机视觉任务中，特征提取的重要性甚至超过了分类器本身，比如CNN提取的feature是比很多hand-crafted features更具备表示能力的。
  特征工程主要分为三个方面：
    :数据预处理：原始数据充满噪声、结构化不足，需要进行一些预处理操作以便特征提取；
    :特征提取：特征提取广义上指的是一种变换，将处于高维空间的样本通过映射或变换的方式转换到低维空间；
    :特征选择：良好的特征（feature）应该与标签（label）高度相关，并且与其他特征不相关。
  特征工程几乎贯穿整个比赛过程。我们需要不断进行迭代，设计特征、选择特征、构建模型、评估模型，才能得到最终的结果。
2.数据预处理
  时间戳处理：
    原始数据中时间戳信息通常需要分成多个维度，如年、月、日、时、分、秒等；（3874D5H -> 3874, 5）
  文本形式的类别数据处理：
    原始数据中的类别信息可能用文本tag来表示，为了减少内存占用和加速计算，通常对类别进行编码然后使用编码来替换。可用sklearn提供的LabelEncoder类来处理；（SW2 -> 2）
  数据精度处理：
    通常用pandas来读取数据，在数据量大时为减少内存占用，可以选择降低精度。（int64 -> int8）
3.构造特征
  :比赛中给的数据一般分为带label的train数据和不带label的test数据。为了使各数据包含信息一致，并构造构造训练集、验证集，数据最终可分为以下五个部分：feat-train, label-train, feat-val, label-val, feat-test。
  用feat-train和label-train训练模型，输入feat-val用label-val验证模型，输入feat-test得到可提交结果。
  :在处理label相关的特征时要防止特征穿越，即feat-val中包含了label-val的信息而出现过拟合。
    以下的特征构造方法只是一些常用的思路，面对具体问题还是要大量头脑风暴来构造针对数据的特征。
    数值特征分箱/分区：太精确的数值特征可能引起过拟合，可以采用分箱的方法来增强算法的泛化能力；（年龄分为年龄段）
    文本特征：Tf-idf得到关键字，word2vec计算embedding、相似度等；（回答过的问题标题与邀请回答问题标题的相似度）
    统计特征：计数、均值、最大值、最小值、方差等；（统计一对多的信息，如回答过的问题标题字数等）
    时序类数据：为数据添加过去一段时间的计数作为特征；（过去一周回答的问题、过去3天回答的问题）;构造频率特征；（平均每天回答多少问题）;构造差异特征；（距离上一次回答过了多久）
4.AutoML
  AutoML（Automated machine learning）是将机器学习应用于现实问题的end-to-end流程自动化的过程。
  AutoML在数据挖掘和深度学习领域目标不同：
      数据挖掘：关注自动化特征工程，模型选择，自动生成代码；
      深度学习：关注自动化网络结构设计和调参。
  
